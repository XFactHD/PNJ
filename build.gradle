plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id "me.champeau.jmh" version "0.7.2"
}

group = 'io.github.xfacthd'
version = '1.0'

project.ext.lwjglVersion = "3.3.3"
project.ext.lwjglNatives = "natives-windows"

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    testImplementation "org.lwjgl:lwjgl"
    testImplementation "org.lwjgl:lwjgl-stb"
    testImplementation "org.lwjgl:lwjgl-xxhash"
    testRuntimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    testRuntimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    testRuntimeOnly "org.lwjgl:lwjgl-xxhash::$lwjglNatives"
}

test {

}

final var INC_ONLY_FROM_DISK = [ '(PNJ|STBI)_read(\\\\d)+bitFile' ];
final var INC_ONLY_FROM_MEMORY = [ '(PNJ|STBI)_read(\\d)+bitBuffer' ];
final var INC_ONLY_RGBA = [ 'PNJTruecolorAlphaDirect(Progressive|Interlace)Benchmark' ]
final var INC_ONLY_RGBA_PROF = [ 'PNJTruecolorAlphaDirect(Progressive|Interlace)Benchmark.PNJ_read(\\d)+bitBuffer' ]
final var INC_DIFF_SIZE = [ 'PNJDifferenSizesBenchmark' ]

jmh {
    includes = INC_ONLY_FROM_MEMORY
    fork = 1
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    options.tags = [ "apiNote" ]
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifactId = 'pnj'

            pom {
                url = 'https://github.com/XFactHD/PNJ'
                description = 'Straightforward PNG decoder and encoder, fully written in Java'
                licenses {
                    license {
                        name = 'LGPL 3'
                        url = 'https://github.com/XFactHD/PNJ/blob/main/LICENSE'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'xfacthd'
                        name = 'Dennis C'
                        email = 'xfacthd@gmx.de'
                    }
                }
                scm {
                    url = 'https://github.com/XFactHD/PNJ'
                    connection = 'scm:git:git://github.com/XFactHD/PNJ.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/XFactHD/PNJ/issues'
                }
            }

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
    repositories {
        maven {
            // FIXME: properly publish to Central Portal directly
            name = 'LocalPublishMaven'
            url = file('/publish')
        }
    }
}

signing {
    sign publishing.publications.mavenJava
    useGpgCmd()
}
